/*
 * Copyright 2023 EPAM Systems, Inc
 *
 * See the NOTICE file distributed with this work for additional information
 * regarding copyright ownership. Licensed under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.epam.deltix.clickhouse.util;

import com.epam.deltix.gflog.api.Log;
import com.epam.deltix.gflog.api.LogFactory;
import net.bytebuddy.dynamic.DynamicType;

import java.io.File;
import java.io.IOException;

public class ByteBuddyHelper {
    private static final Log LOG = LogFactory.getLog(ByteBuddyHelper.class);

    public static void saveClass(DynamicType.Unloaded<?> unloadedType, String outPath) {

        // A way to save generated class for later analysis
        if (outPath != null && !outPath.isEmpty()) {
            try {
                unloadedType.saveIn(new File(outPath));
            } catch (IOException e) {
                LOG.error()
                        .append("Exception during saving autogenerated class.")
                        .append(e)
                        .commit();
            }
        }
    }
}